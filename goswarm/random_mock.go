// Code generated by MockGen. DO NOT EDIT.
// Source: ./random.go

// Package goswarm is a generated GoMock package.
package goswarm

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// Mockrandom is a mock of random interface
type Mockrandom struct {
	ctrl     *gomock.Controller
	recorder *MockrandomMockRecorder
}

// MockrandomMockRecorder is the mock recorder for Mockrandom
type MockrandomMockRecorder struct {
	mock *Mockrandom
}

// NewMockrandom creates a new mock instance
func NewMockrandom(ctrl *gomock.Controller) *Mockrandom {
	mock := &Mockrandom{ctrl: ctrl}
	mock.recorder = &MockrandomMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Mockrandom) EXPECT() *MockrandomMockRecorder {
	return m.recorder
}

// next mocks base method
func (m *Mockrandom) next(lower, upper float64) float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "next", lower, upper)
	ret0, _ := ret[0].(float64)
	return ret0
}

// next indicates an expected call of next
func (mr *MockrandomMockRecorder) next(lower, upper interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "next", reflect.TypeOf((*Mockrandom)(nil).next), lower, upper)
}
